## 去重
def setFunc(list):
    list.sort()
    last=list[-1]
    for i in range(len(list)-2,-1,-1):
        if last == list[i]:
            del list[i]
        else:
            last = list[i]
    return list


#快排 Python
nums=[2,3,1,2,3,5,6,9,2,3,7]
def QuickSort(nums):
    if len(nums) <= 1:
        return nums
    less=[]
    grater=[]
    basenum=nums.pop()
    print('this lucy num : ',basenum)
    for x in nums:
        if x < basenum:
            less.append(x)
        else:
            grater.append(x)
    return QuickSort(grater)+[basenum]+QuickSort(less)
    # return QuickSort(less)+[basenum]+QuickSort(grater)

print(QuickSort(nums))


#冒泡排序:每次比较相邻的两个元素如果位置错误就进行互换
def bubbleSort(nums):
    for i in range(len(nums)-1):
        for j in range(len(nums)-1-i):
            if nums[j] > nums[j+1]:
                nums[j],nums[j+1]=nums[j+1],nums[j]
    return nums
nn=[4,2,1,6,4,8,9,3,2,1,9,0]
aa=bubbleSort(nn)
print('--',aa)


#斐波那契数列
def Fic(num):
    ## example list
    # count=0
    # list=[1,1]
    # while count < num:
    #     list.append(list[-1]+list[-2])
    #     count+=1
    # return list
    ## yield
    a,b,count=1,1,0
    while count < num:
        a,b=b+a,a
        yield a
        count+=1

print(Fic(3))
print([x for x in Fic(10)])


# ##反转字符串
# s='hello'
# def reverseFunc(string):
#     str=[x for x in ''.join(string)]
#     s=''
#     for i in range(len(str)-1,-1,-1):
#         s+=str[i]
#     return '"'+s+'"'
#
# a=reverseFunc(s)
# print(a)


### 颠倒整数
# a=123
# b=-123
# c=120
# def reverseInt(num):
#     s=str(num)
#     sli=[x for x in ''.join(s)]
#     if '-' in sli:
#         n='-'
#         sli.remove('-')
#     else:
#         n=''
#     for i in range(len(sli)-1,-1,-1):
#         n+=sli[i]
#     n=int(n)
#     return n
# 
# obj=reverseInt(a)
# obj2=reverseInt(b)
# obj3=reverseInt(c)
# print(obj,obj2,obj3)


##二分查找
def binarySearch(luckNum,nums):
    nums.sort()
    print(nums)
    high=len(nums)
    low=0
    while low <= high:
        mid=int((low + high) / 2)
        print('mid is :',mid)
        if int(luckNum) == int(nums[mid]):
            return mid
        elif int(nums[mid]) > int(luckNum):
            high = mid - 1
        else:
            low = mid + 1
    return -1
a=input('pls input a num: ')
num=[2,4,1,7,5,9,6,3,0,8,29,31,9,37,88,7,93,28,65,39,85,69,8,2,1]
try:
    obj = binarySearch(a, num)
    if obj != -1:
        print('luck num is ',str(a)+' index is '+str(obj))
    else:
        print('您输入的数字不在数组里')
except:
    pass
