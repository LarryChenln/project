
##############################################################################
import datetime
import time
mytime="2022-11-17T04:52:00Z"

def str_to_timestamp_3(str_time=None, fmt='%Y-%m-%dT%H:%M:%SZ'):
    if str_time:
        d = datetime.datetime.strptime(str_time, fmt)
        timeStamp = int(time.mktime(d.timetuple())) + 8 * 3600
        # 转换成localtime
        time_local = time.localtime(timeStamp)
        # 转换成新的时间格式(2016-05-05 20:28:54)
        dt = time.strftime("%Y-%m-%d %H:%M:%S", time_local)
        return dt
        ## 2022-11-17T04:52:00Z ---> 2022-11-17 12:52:00
    return int(time.time())
##测试
print(str_to_timestamp_3(str_time=mytime))
##############################################################################

def mytime(minute=None):
    '''
    打印标准时间
    :param minute: int +|-
    :return: 2020-09-28 16:42:44.219221
    '''
    from  datetime import timedelta, datetime
    if minute is None:
        return datetime.today()
    elif isinstance(minute,int):
        now = datetime.today()
        return now + timedelta(minutes=minute)


interval_5_min = str(mytime(minute=-5)) + " 至 " + str(mytime())
print(interval_5_min)


# 判断系统文件大小
def getFileSize(path):
    try:
        size = os.path.getsize(path)
        return size / 1024 / 1024
    except Exception as err:
        print(err)



###二分查找###
count = 0
def binarySearch(lis,left,right,num):
    global count
    count += 1
    if left > right:
        return -1
    mid = (left+right) // 2
    if num > lis[mid]:
        left = mid + 1
    elif num < lis[mid]:
        right = mid - 1
    else:
        print("{num}所在列表中的下标位置为:{mid}".format(num=num,mid=mid))
        return mid
    print('第{count}次查询'.format(count=count))
    return binarySearch(lis,left,right,num)


lis = [1,3,2,5,4,8,6,7]
while 1:
    num = int(input('pls input num:'))
    res = binarySearch(sorted(lis),0,len(lis)-1,num)
    if res == -1:
        print("未找到")
    else:
        print("已找到")

#### 递归 #####

import os
def getAllDirRe(dirpath,sp=""):
    try:
        os.listdir(path=dirpath)
    except:
        return
    sp += "  "
    for file in os.listdir(path=dirpath):
        abs_path = os.path.join(dirpath,file)
        if os.path.isdir(abs_path):
            print(sp + "目录",abs_path)
            getAllDirRe(abs_path,sp=sp)
        else:
            print(sp + '普通文件:',abs_path)

getAllDirRe('/tmp/test/2/b/2b.log')



###利用 UDP 协议来实现的，生成一个UDP包，把自己的 IP 放如到 UDP 协议头中，然后从UDP包中获取本机的IP。
###这个方法并不会真实的向外部发包，所以用抓包工具是看不到的

def get_host_ip():
    import socket
    try:
        s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
        s.connect(('8.8.8.8', 80))
        # print(s.getsockname())
        ip = s.getsockname()[0]
    finally:
        s.close()
    return ip
    
    
---------
import socket
def get_ip():
    try:
        hostname = socket.getfqdn(socket.gethostname())
        ipaddr = socket.gethostbyname(hostname)
    except Exception as msg:
        print(msg)
        ipaddr = ''
    return ipaddr
    
 -----------   
    
###------------------------------------------------------------------------------------------

###python3中为string.ascii_letters,而python2下则可以使用string.letters和string.ascii_letters
def GenPassword(length):
    import random
    import string
    chars=string.ascii_letters+string.digits
    return ''.join([random.choice(chars) for i in range(length)])#得出的结果中字符会有重复的

print(GenPassword(8))

###------------------------------------------------------------------------------------------
import subprocess,os,sys

portcmd="netstat -nlt -p tcp|grep 80|awk '{print $2}'|head -1"
def zabbixSend(cmd):
    try:
        p=subprocess.Popen(cmd,stderr=subprocess.PIPE,stdout=subprocess.PIPE,shell=True)
        status=p.communicate()
    except:
        status=0
    if status != 0:
        ### do something
        print('port is ok','port:',int(status[0]))
        ### example zabbix_send -s xxx.xx.x.x -k 'keyname' -o -value int(status[0]) -vv
    else:
        return False
    return 0

print(zabbixSend(portcmd))

###------------------------------------------------------------------------------------------
###单元测试

import unittest

def myfunc(x,y):
    return x/y

class Testfun(unittest.TestCase):
    def test_int(self):
        self.assertEqual(myfunc(6,3),2)

    def test_float(self):
        self.assertEqual(myfunc(8.4,2),4.2)


if __name__ == '__main__':
    unittest.main()
    
###------------------------------------------------------------------------------------------
import pandas as pd
### 读取CSV文件，逗号分隔
df=pd.read_csv('/tmp/test.csv',header=None,sep=',')
length=len(df.values)
for i in range(0,length):
    ele=df.values[i]
    name=ele[0]
    age=ele[1]
    sex=ele[2]
    city=ele[3]
    sql='insert into tb values(%s,%s,%s,%s)' % (name,age,sex,city)
    print(sql)
    ##cur.execute(sql)

###------------------------------------------------------------------------------------------

### csv文件读取 拼接SQL
inputFile=input('pls input a file name:')
with open('{filename}'.format(filename=inputFile),'r')as f:
    li=[]
    for w in f.readlines():
        li.append(w)
    for i in range(len(li)):
        word=li[i]
        line=word.split(',')
        name=line[0]
        age=line[1]
        sex=line[2]
        city=line[3]
        sql='insert into tb tongji values(%s,%s,%s,%s)' % (name,age,sex,city)
        ### mysql-exec-sql
        print(sql)

###------------------------------------------------------------------------------------------


echo -e "\033[30m 黑色字 \033[0m"
echo -e "\033[31m 红色字 \033[0m"
echo -e "\033[32m 绿色字 \033[0m"
echo -e "\033[33m 黄色字 \033[0m"
echo -e "\033[34m 蓝色字 \033[0m"
echo -e "\033[35m 紫色字 \033[0m"
echo -e "\033[36m 天蓝字 \033[0m"
echo -e "\033[37m 白色字 \033[0m"
 

echo -e "\033[40;37m 黑底白字 \033[0m"
echo -e "\033[41;37m 红底白字 \033[0m"
echo -e "\033[42;37m 绿底白字 \033[0m"
echo -e "\033[43;37m 黄底白字 \033[0m"
echo -e "\033[44;37m 蓝底白字 \033[0m"
echo -e "\033[45;37m 紫底白字 \033[0m"
echo -e "\033[46;37m 天蓝底白字 \033[0m"
echo -e "\033[47;30m 白底黑字 \033[0m"

###------------------------------------------------------------------------------------------
#### IP 及端口存活探测

import wget

red_font="\033[31m %s \033[0m"
green_font="\033[32m %s \033[0m"
data={
    'zabbix_3306_status':'172.30.16.91:3306',
    'zabbix_80_status':'172.30.16.91:80'
}


def exec(cmd):
    from subprocess import PIPE, Popen
    p = Popen(cmd, stderr=PIPE, stdout=PIPE, shell=True)
    result = p.communicate()
    return result


for k,v in data.items():
    cmd = 'wget {url} >/dev/null'.format(url=v)
    obj = exec(cmd)
    obj=obj[1].decode('utf8')
    if "failed: Connection refused" in obj:
        print(k,red_font % ' down')
    else:
        print(k,green_font % ' up')
###------------------------------------------------------------------------------------------



from openpyxl import load_workbook
import re
XLSX_FIlE = "/Users/l.xlsx"

workbook = load_workbook(XLSX_FIlE)
# booksheet = workbook.active                #获取当前活跃的sheet,默认是第一个sheet
sheets = workbook.get_sheet_names()  # 从名称获取sheet
booksheet = workbook.get_sheet_by_name(sheets[0]) #获取sheets第1列
rows = booksheet.rows
# 迭代所有的行

ips = []

for row in rows:
    try:
        line = [col.value for col in row]
        ip=line[0].split(";")[10].split("=")[1]
        port = line[0].split(";")[9].split("=")[1]
        ele=ip+":"+port
        ips.append("dest " + ele)

    except:
        pass


print(set(ips))
print(len(set(ips)))
with open("/Users/l/Downloads/result.log","w") as f:
    for li in set(ips):
        f.writelines(str(li)+"\n")
        
###------------------------------------------------------------------------------------------
#打印 函数执行的详细信息
import pysnooper


# @pysnooper.snoop('/tmp/pysnoop.log') OR
@pysnooper.snoop()
def int2str(num):
    # print(num)
    num = num * 3
    return str(num)

print(int2str(2))

###------------------------------------------------------------------------------------------
##格式化
url='http://www.larry.com/?name={name}'.format(name='dada')
print(url)
url='http://www.larry.com/?name={name}'.format(**{'name':'Shirley'})
print(url)
url='http://www.larry.com/?name=%(name)s' % {'name':'karin'}
print(url)

'''print:
http://www.larry.com/?name=dada
http://www.larry.com/?name=Shirley
http://www.larry.com/?name=karin
'''







from functools import reduce
li = [2,4,5,6,8,12]

b=filter(lambda x:x % 2 == 0 ,li)
for i in b:
    print(i,end=" ")
  
  
a=map(lambda x:x+2,li)
print()
for i in a:
    print(i,end=" ")


print()
c=reduce(lambda x,y:x+y ,li)
print(c)





##利用yield 读取大文件
def myreadlines(f,split_str):
    buf = ''
    while True:
        while split_str in buf:
            pos = buf.index(split_str)
            yield buf[:pos]
            buf = buf[pos+len(split_str):]
        chunk = f.read(4096)
        #判断文件边界是否读至文件末尾
        if not chunk:
            yield buf
            break
        buf += chunk

with open('/tmp/test.txt','r')as f:
    for line in myreadlines(f,'{|}'):
        print(line)



####################################
## 统计

from collections import Counter
ip_list = ['172.17.12.11','172.30.16.56','172.17.12.11','172.30.16.59','172.17.12.11','172.30.16.56','172.17.12.11','172.30.16.53']
count = Counter(ip_list)
ips = ['192.168.0.1']
count.update(ips)
print(count)
##top n
print(count.most_common(2))

####################################
