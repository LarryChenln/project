
//golang get md5 sha for file
func getmd5(filename string)string{
	file,_ := os.Open(filename)
	defer file.Close()
	h := md5.New()
	io.Copy(h,file)
	return fmt.Sprintf("%x",h.Sum([]byte("")))
}


-------------------------------------------------------
//每60s执行打印字符
	ticker:=time.NewTicker(time.Second*60)
	go func() {
		for _=range ticker.C {
		println("test")
	}
	}()
	time.Sleep(time.Minute)


-------------------------------------------------------
import (
	"fmt"
	"math/rand"
	"time"
)

func main() {
	//获取100内的随机数
	fmt.Println(rad.Intn(99)+1)

	//获取8位随机密码
	fmt.Println(getRandomPass(12))
}

var rad = rand.New(rand.NewSource(time.Now().Unix()))
var all_strs = "abcdefghihdABCEDETGASJHK1234567890!@#$%^&&*()"

func getRandomPass(n int)string{
	passwd :=""
	for i:=0;i<=n;i++{
		passwd+=string(all_strs[rad.Intn(len(all_strs)-1)+1])
	}
	return passwd
}



-------------------------------------------------------



// string md5sum
func main() {

	var data = "hello world"
	fmt.Println(getmd5(data))
}
// get md5 for strings
func getmd5(data string)string{
	h:= md5.New()
	//h:=sha256.New()
	io.WriteString(h,data)
	return fmt.Sprintf("%x",h.Sum([]byte("")))
}






// get current path

func GetCurrentPath()string{
	//file,_ := exec.LookPath(os.Args[0])
	var myfilepath = "/usr/local/python/logs/err.log"
	path,_ := filepath.Abs(myfilepath)
	path = string(path[0:strings.LastIndex(path,"/")])
	return string(path)
}




// golang get random num
func RandStringBytes(n int) string{
const letterBytes = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"
b := make([]byte,n)
for num := range b{
b[num] = letterBytes[rand.Intn(len(letterBytes))]
}
return string(b)
}




// exec system cmd
func myexec(cmdline string) string{
out, err := exec.Command("bash", "-c", cmdline).Output()
if err != nil {
fmt.Printf("Failed to execute command: %s", cmdline)
}
return string(out)
}
